#!/usr/bin/env python
# apt install gir1.2-appindicator3
import logging
import os
import sys
import threading
import time

import gi
gi.require_version('Gtk', '3.0')
gi.require_version('AppIndicator3', '0.1')
from gi.repository import Gtk, Gdk, GLib, GObject, AppIndicator3

logging.basicConfig(format='%(asctime)s %(message)s', level = logging.INFO)

indicator = AppIndicator3.Indicator.new("custom_tray", "", AppIndicator3.IndicatorCategory.APPLICATION_STATUS)
indicator.set_status(AppIndicator3.IndicatorStatus.PASSIVE)

def set_icon(name):
    logging.info(f'Setting icon: {name}')
    indicator.set_icon(name)
    indicator.set_status(AppIndicator3.IndicatorStatus.ACTIVE)

def command_loop(fifo):
    while True:
        with open(fifo, 'r') as stream:
            for line in stream.readlines():
                handle_command(line.strip())

def handle_command(command_string):
    (command, _, argument) = command_string.partition(":")
    if(command == 'quit'):
        Gtk.main_quit()
    elif(command == 'set_icon'):
        logging.info(f'Setting icon: {argument}')
        GLib.idle_add(set_icon, argument)
    else:
        logging.warning(f'Ignoring unrecognized command: {command_string}')

def main():
    thread = threading.Thread(target=command_loop, args=(sys.argv[1],))
    thread.daemon = True
    thread.start()

    Gtk.main()

def quit(_):
    gtk.main_quit()

if __name__ == "__main__":
    main()
